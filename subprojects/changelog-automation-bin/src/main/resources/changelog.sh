#!/usr/bin/env bash
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
#-------------------------------------------------------------------------
# Authors:
#     Zsolt Kovari (zsolt@kovaridev.com)
#------------------------------------------------------------------------- 
# Script: changelog.sh
# Version: 0.1.0
# Last updated: 2019-07-14
# URL: https://github.com/zkovari/gradle-changelog-automation-plugin
#-------------------------------------------------------------------------
# Usage: changelog.sh [OPTION]... --type [TYPE] [TITLE]
#        For the available options and examples, see changelog.sh --help 
#
    
set -e

function display_help {
    cat <<Help
Usage: $(basename "$0") [OPTION]... --type [TYPE] [TITLE]
Generate a .yml file that corresponds to a new changelog entry.
Example: $(basename "$0") --type added 'My new feature'

Obligatory option:
        -t| -- type          the type of the changelog entry

Miscellaneous:
        -h| --help           display this help text and exit
        -v|--version         display version information and exit
        --dry-run            display the .yml changelog entry without 
                             generating the file

------------------------------------------------------------------------------

Examples:


Help
}

VERSION=0.1.0

TITLE=""
REFERENCE=""
AUTHOR=""
TYPE=""
USE_GIT_USERNAME=0
DRY_RUN=0

while [[ $# -gt 0 ]]
do
    key="${1}"
    case ${key} in
    -t|--type)
        TYPE="${2}"
        shift # past argument
        shift # past value
        ;;
    -r|--reference)
        REFERENCE="${2}"
        shift # past argument
        shift # past value
        ;;
    -u|--git-username)
        USE_GIT_USERNAME=1
        shift # past argument
        ;;
    -v| --version)
        echo "Version: $VERSION"
        exit 0
        shift # past argument
        ;;
    --dry-run)
        DRY_RUN=1
        shift # past argument
        ;;
    -h|--help)
        display_help
        exit 0
        shift # past argument
        ;;
    *)    # unknown option
        if [[ $# == 1 ]]; then
            TITLE=$1
        fi        
        shift # past argument
        ;;
    esac
done

if [[ -z $TITLE || -z $TYPE ]]; then
    echo "Title and type must be specified."
    echo "See options and examples in --help:"
    echo ""
    display_help
    exit 1
fi

CHANGELOG_ENTRY="# Auto-generated by $(basename "$0") script. Version: $VERSION
title: $TITLE
reference: $REFERENCE
author: $AUTHOR
type: $TYPE"

echo "$CHANGELOG_ENTRY"


